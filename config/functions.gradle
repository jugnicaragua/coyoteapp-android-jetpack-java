// Definiendo las variables
def BOOLEAN = "boolean"
def STRING = "String"
def INT = "int"
def TRUE = "true"
def FALSE = "false"
def DEBUG_MODE = "DEBUG_MODE"

//Asignando nuestras variables a ext de gradle
//toodo lo que est√° en ext  es externo/global, lo que indica que podemos leerlas
ext.BOOLEAN = BOOLEAN
ext.STRING = STRING
ext.INT = INT
ext.TRUE = TRUE
ext.FALSE = FALSE
ext.DEBUG_MODE = DEBUG_MODE

def EXCHANGE_RATE_URL_API = "exchange_rate_url"
ext.EXCHANGE_RATE_URL_API = EXCHANGE_RATE_URL_API

//definir la funcion para leer el archivo de propiedades
def getCustomProperty(key){
    Properties props = new Properties()
    def propFile = file("../config/config.properties")

    if (propFile.canRead()){
        props.load(new FileInputStream(propFile))
        if (props != null && props.containsKey(key)){
            println 'My Key '+key+'::'+props[key]
            return props[key]
        }
        else{
            println 'MyHR.properties '+ key + ' found but some entries are missing'
        }
    }
    else{
        println 'MyHR.properties '+ key + ' not found'
    }
    return null
}
ext.getCustomProperty = this.&getCustomProperty

def generateSignature(){
    // Recoger los datos de la firma
    Properties props = new Properties()
    def propFile = file('../carpetaSegura/key.properties')
    if (propFile.canRead()){
        props.load(new FileInputStream(propFile))
        if (props != null &&
                props.containsKey('STORE_FILE') &&
                props.containsKey('STORE_PASSWORD') &&
                props.containsKey('KEY_ALIAS') &&
                props.containsKey('KEY_PASSWORD') ){
            android.signingConfigs.defaultSign.storeFile=file(props.get('STORE_FILE'))
            android.signingConfigs.defaultSign.storePassword=props.get('STORE_PASSWORD')
            android.signingConfigs.defaultSign.keyAlias=props.get('KEY_ALIAS')
            android.signingConfigs.defaultSign.keyPassword=props.get('KEY_PASSWORD')
        } else {
            println 'key.properties found but some entries are missing'
            android.buildTypes.debug.signingConfig = null
        }
    } else {
        println 'key.properties not found'
        android.buildTypes.release.signingConfig = null
    }
}
ext.generateSignature = this.&generateSignature

def addRepos(RepositoryHandler handler){
    handler.google()
    handler.jcenter()
}

ext.addRepos = this.&addRepos